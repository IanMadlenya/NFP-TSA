plot(arima.sim(list(order = c(0, 0, 1), ma = 0.5), n = 100))
plot(arima.sim(list(order = c(0, 0, 1), ma = 0.5), n = 100), ylab = "")
ma2 <- arima.sim(list(order = c(0, 0, 1), ma = 0.5), n = 100)
acf(ma2)
acf(ma2)[1]
ma2_2 <- arima.sim(list(order = c(0, 0, 1), ma = -0.5), n = 100)
acf(ma2_2)[1]
ma2_1 <- arima.sim(list(order = c(0, 0, 1), ma = 0.5), n = 100)
acf(ma2_1)[1]
set.seed(100)
arima.sim(list(order = c(1, 0, 1), ar = 0.5, ma = -0.5), n = 100)
set.seed(100)
arma_wn <- arima.sim(list(order = c(1, 0, 1), ar = 0.5, ma = -0.5), n = 100)
wn <- rnorm(100, 0, 1)
plot(wn)
plot(arma_wn)
plot(wn)
plot(arma_wn)
plot(wn)
set.seed(100)
wn <- rnorm(100, 0, 1)
plot(wn)
plot(arma_wn)
plot(wn)
plot(arma_wn)
plot(wn)
plot(arma_wn)
plot(wn)
arma_wn <- arima.sim(list(order = c(1, 0, 1), ar = 0.5, ma = 0.5), n = 100)
plot(arma_wn)
arma_wn <- arima.sim(list(order = c(1, 0, 1), ar = 0.5, ma = 0.5), n = 100)
plot(arma_wn)
set.seed(100)
arma_wn <- arima.sim(list(order = c(1, 0, 1), ar = 0.5, ma = -0.5), n = 100)
plot(arma_wn)
set.seed(100)
arma_wn <- arima.sim(list(order = c(1, 0, 1), ar = 0.5, ma = -0.5), n = 100)
wn <- rnorm(100, 0, 1)
plot(arma_wn)
plot(wn)
ar2 <- arima.sim(list(list(order = c(2, 0, 0), ar = c(3/5, -4/5)), n = 10000, sd = 1)
ar2 <- arima.sim(list(order = c(2, 0, 0), ar = c(3/5, -4/5)), n = 10000, sd = 1)
ar2 <- arima.sim(list(ar = c(3/5, -4/5)), n = 10000, sd = 1)
ar2
summary(ar2)
arima(ar2)
ar2 <- arima.sim(list(ar = c(3/5, -4/5)), n = 10000)
ma2 <- arima.sim(list(ma = c(0.8, 1.1)), n = 10000)
arma1_1 <- arima.sim(list(ar = c(-4/5), ma = c(4/5)), n = 10000)
plot(arma1_1_)
plot(arma1_1)
plot(ma2)
plot(ar2)
acf(ar2)
acf(ma2)
acf(arma1_1)
acf(ar2)
pacf(ar2)
pacf(ma2)
acf(ma2)
pacf(arma1_1)
acf(arma1_1)
w <- rnorm(10000, 0, 1)
ar2 <- filter(w, c(-3/5, 4/5), method = "recursive")
acf(ar2)
acf(ar2)
plot(ar2)
ar2 <- filter(w, c(-3/5, 4/5), method = "recursive")
ar2 <- arima.sim(list(ar = c(-3/5, 4/5)), n = 10000)
ar2 <- filter(w, c(-3/5, 4/5), method = "recursive")
ar2
plot(ar2)
# ar2 <- arima.sim(list(ar = c(-3/5, 4/5)), n = 10000) not stationary
acf(ar2)
ar2 <- filter(w, c(-3/5, 4/5), method = "recursive")
summary(ar2)
length(ar2)
min(ar2)
ar2 <- filter(w, c(-3/5, 4/5), sides = 1, method = "recursive")
plot(ar2)
summary(ar2)
w <- rnorm(10050, 0, 1)
ar2 <- filter(w, c(-3/5, 4/5), sides = 1, method = "recursive")[-1:50]
ar2 <- filter(w, c(-3/5, 4/5), sides = 1, method = "recursive")[-(1:50)]
plot(ar2)
summary((ar2))
acf(ma2, main="test")
acf(arma1_1, main = "ACF of Simulated ARMA(1, 1) Process")
pacf(arma1_1, main = "PACF of Simulated ARMA(1, 1) Process")
acf(ma2, main = "ACF of Simulated MA(2) Process")
pacf(ma2, main = "PACF of Simulated MA(2) Process")
acf(arma1_1, main = "ACF of Simulated ARMA(1, 1) Process")
pacf(arma1_1, main = "PACF of Simulated ARMA(1, 1) Process")
ar2 <- arima.sim(list(ar = c(3/5, -4/5)), n = 10000)
acf(ar2)
pacf(ar2)
ma2 <- arima.sim(list(ma = c(0.8, 1.1)), n = 10000)
acf(ma2, main = "ACF of Simulated MA(2) Process")
pacf(ma2, main = "PACF of Simulated MA(2) Process")
arma1_1 <- arima.sim(list(ar = c(-4/5), ma = c(4/5)), n = 10000)
acf(arma1_1, main = "ACF of Simulated ARMA(1, 1) Process")
pacf(arma1_1, main = "PACF of Simulated ARMA(1, 1) Process")
acf(ma2, main = "ACF of Simulated MA(2) Process")
pacf(ma2, main = "PACF of Simulated MA(2) Process")
arma1_1 <- arima.sim(list(ar = c(4/5), ma = c(4/5)), n = 10000)
acf(arma1_1, main = "ACF of Simulated ARMA(1, 1) Process")
pacf(arma1_1, main = "PACF of Simulated ARMA(1, 1) Process")
arma1_1 <- arima.sim(list(ar = c(4/5), ma = c(4/5)), n = 10000)
acf(arma1_1, main = "ACF of Simulated ARMA(1, 1) Process")
pacf(arma1_1, main = "PACF of Simulated ARMA(1, 1) Process")
ar2 <- arima.sim(list(ar = c(3/5, -4/5)), n = 10000)
acf(ar2)
pacf(ar2)
ar2 <- arima.sim(list(ar = c(3/5, -4/5)), n = 10000)
acf(ar2)
pacf(ar2)
pacf(arma1_1, main = "PACF of Simulated ARMA(1, 1) Process")
acf(ma2, main = "ACF of Simulated MA(2) Process")
pacf(ma2, main = "PACF of Simulated MA(2) Process")
acf(arma1_1, main = "ACF of Simulated ARMA(1, 1) Process")
pacf(arma1_1, main = "PACF of Simulated ARMA(1, 1) Process")
acf(ma2, main = "ACF of Simulated MA(2) Process")
pacf(ma2, main = "PACF of Simulated MA(2) Process")
acf(ma2, main = "ACF of Simulated MA(2) Process")
pacf(ma2, main = "PACF of Simulated MA(2) Process")
ar2 <- arima.sim(list(ar = c(3/5, -4/5)), n = 10000)
acf(ar2)
pacf(ar2)
ar2 <- arima.sim(list(ar = c(3/5, -4/5)), n = 10000)
acf(ar2)
qnorm(0.05)
qnorm(0.1)
qnorm(0.4)
qnorm(0.5)
qnorm(0.95)
qnorm(0.95)*sqrt(2)
10.5-2.326
1.1**2
2*(1+1.21)
sqrt(4.42)
sqrt(4.42)*1.64
sqrt(4.42)*qnorm(0.95)
11.55-3.458107
11.55+3.458107
library(astsa)
plot(jj)
diff1 <- diff(jj)
plot(diff1)
seasonal_diff1 <- diff(diff1, lag = 12)
plot(seasonal_diff1)
plot(diff1)
seasonal_diff1 <- diff(diff1, lag = 4)
plot(seasonal_diff1)
plot(diff1)
plot(seasonal_diff1)
plot(diff1, type = "o")
plot(seasonal_diff1, type = "o")
plot(diff1, type = "o")
plot(seasonal_diff1, type = "o")
seasonal_diff1 <- diff(diff1, lag = 12)
plot(seasonal_diff1, type = "o")
seasonal_diff1 <- diff(diff1, lag = 3)
plot(seasonal_diff1, type = "o")
seasonal_diff1 <- diff(diff1, lag = 5)
plot(seasonal_diff1, type = "o")
seasonal_diff1 <- diff(diff1, lag = 4)
plot(seasonal_diff1, type = "o")
seasonal_diff1 <- diff(diff1, lag = 4)
plot(AirPassengers)
diff1 <- diff(AirPassengers)
plot(diff1, type = "o")
seasonal_diff1 <- diff(diff1, lag = 12)
plot(seasonal_diff1, type = "o")
plot(diff1, type = "o")
plot(seasonal_diff1, type = "o")
omega <- seq(0, .5, by = .01)
FRdiff <- abs(1 - exp(2i * pi * w))^2
FRdiff <- abs(1 - exp(2i * pi * omega))^2
plot(omega, FRdiff, type = "l", xlab = "frequency")
plot(omega, FRdiff, type = "l", xlab = "frequency", ylab = "First Difference)
plot(omega, FRdiff, type = "l", xlab = "frequency", ylab = "First Difference"")
plot(omega, FRdiff, type = "l", xlab = "frequency", ylab = "First Difference")
plot(omega, FRdiff, type = "l", xlab = "frequency", ylab = "First Difference")
seasonal_diff <- abs(1 - exp(2i * pi * omega * 12))^2
plot(omega, seasonal_diff, type = "l", xlab = "frequency", ylab = "Seasonal Difference")
seasonal_first_diff <- abs(1 - exp(2i * pi * omega))^2 * abs(1 - exp(2i * pi * omega * 12))^2
plot(omega, seasonal_first_diff, type = "l", xlab = "frequency", ylab = "Seasonal Difference")
plot(omega, first_diff, type = "l", xlab = "frequency", ylab = NA)
first_diff <- abs(1 - exp(2i * pi * omega))^2
plot(omega, first_diff, type = "l", xlab = "frequency", ylab = NA)
x_density <- 1 + (-0.6)^2 - 0.6*exp(-2i * pi * omega)
plot(x_density)
plot(omega, x_density, type = "l")
plot(omega, x_density, type = "l")
plot(omega, first_diff, type = "l", xlab = "frequency", ylab = NA,
main = "Power Transfer Function of First Difference")
x_density <- 1 + (-0.6)^2 - 0.6*exp(-2i * pi * omega)
plot(omega, x_density, type = "l")
x_density <- 1 + (-0.6)^2 - 0.2*exp(-2i * pi * omega)
plot(omega, x_density, type = "l")
theta1 <- 1
theta2 <- -0.6
x_density <- theta1 + (theta2)^2 + (theta1 * theta2) * exp(-2i * pi * omega)
plot(omega, x_density, type = )
plot(omega, x_density, type = "l")
theta1 <- 2
theta2 <- -0.6
x_density <- theta1 + (theta2)^2 + (theta1 * theta2) * exp(-2i * pi * omega)
plot(omega, x_density, type = "l")
theta1 <- -1
theta2 <- -0.6
x_density <- theta1 + (theta2)^2 + (theta1 * theta2) * exp(-2i * pi * omega)
plot(omega, x_density, type = "l")
theta1 <- 1
theta2 <- -0.6
x_density <- theta1 + (theta2)^2 + (theta1 * theta2) * exp(-2i * pi * omega)
plot(omega, x_density, type = "l")
plot(omega, x_density, type = "l", xlab = "frequency", ylab = NA,
main = "Spectral Density of x_t")
plot(omega, x_density, type = "l", xlab = "frequency", ylab = NA,
main = "Spectral Density of" + expression(x_t))
plot(omega, x_density, type = "l", xlab = "frequency", ylab = NA,
main = "Spectral Density of x")
theta1 <- 1
theta2 <- -0.6
x_density <- theta1^2 + (theta2)^2 + (theta1 * theta2) * exp(-2i * pi * omega)
plot(omega, x_density, type = "l", xlab = "frequency", ylab = NA,
main = "Spectral Density of x")
x_density <- theta1^2 + theta2^2 + (theta1 * theta2) * exp(-2i * pi * omega) +
(theta1 * theta2) * exp(2i * pi * omega)
plot(omega, x_density, type = "l", xlab = "frequency", ylab = NA,
main = "Spectral Density of x")
x_density <- theta1^2 + theta2^2 + (theta1 * theta2) * exp(-2*i * pi * omega) +
(theta1 * theta2) * exp(2i * pi * omega)
2*i
omega <- seq(0, .5, by = .01)
theta1 <- 1
theta2 <- -0.6
x_density <- theta1^2 + theta2^2 + (theta1 * theta2) * exp(-2i * pi * omega) +
(theta1 * theta2) * exp(2i * pi * omega)
plot(omega, x_density, type = "l", xlab = "frequency", ylab = NA,
main = "Spectral Density of x")
omega <- seq(-.5, .5, by = .01)
theta1 <- 1
theta2 <- -0.6
x_density <- theta1^2 + theta2^2 + (theta1 * theta2) * exp(-2i * pi * omega) +
(theta1 * theta2) * exp(2i * pi * omega)
plot(omega, x_density, type = "l", xlab = "frequency", ylab = NA,
main = "Spectral Density of x")
```{r 4c}
theta1 <- 1
theta2 <- -0.6
x_density <- theta1^2 + theta2^2 + (theta1 * theta2) * exp(-2i * pi * omega) +
(theta1 * theta2) * exp(2i * pi * omega)
plot(omega, x_density, type = "l", xlab = "frequency", ylab = NA,
main = "Spectral Density of x")
plot(omega, x_density, type = "l", xlab = "frequency", ylab = NA,
main = "Spectral Density of x")
omega <- seq(0, .5, by = .01)
plot(omega, x_density, type = "l", xlab = "frequency", ylab = NA,
main = "Spectral Density of x")
theta1 <- 1
theta2 <- -0.6
x_density <- theta1^2 + theta2^2 + (theta1 * theta2) * exp(-2i * pi * omega) +
(theta1 * theta2) * exp(2i * pi * omega)
plot(omega, x_density, type = "l", xlab = "frequency", ylab = NA,
main = "Spectral Density of x")
a <- 0.1
recursive_filter <- abs(1 + 2/(1 - a * exp(-2i * pi * omega)))^2
plot(omega, recursive_filter, type = 'l')
plot(omega, recursive_filter, type = 'l', xlab = "frequency", ylab = NA,
main = Power Transfer Function)
recursive_filter <- abs(1 + 2/(1 - a * exp(-2i * pi * omega)))^2
plot(omega, recursive_filter, type = 'l', xlab = "frequency", ylab = NA,
main = Power Transfer Function)
recursive_filter <- abs(1 + 2/(1 - a * exp(-2i * pi * omega)))^2
plot(omega, recursive_filter, type = 'l', xlab = "frequency", ylab = NA,
main = "Power Transfer Function")
recursive_filter <- abs(2 + 1/(1 - a * exp(-2i * pi * omega)) + a * exp(-2i * pi *omega))^2
plot(omega, recursive_filter, type = 'l', xlab = "frequency", ylab = NA,
main = "Power Transfer Function")
a <- 0.1
recursive_filter <- abs(2 + 1/(1 - a * exp(-2i * pi * omega)) + a * exp(-2i * pi *omega))^2
plot(omega, recursive_filter, type = 'l', xlab = "frequency", ylab = NA,
main = "Power Transfer Function")
recursive_filter <- abs(2 + 1/(1 - a * exp(-2i * pi * omega)) - a * exp(-2i * pi *omega))^2
plot(omega, recursive_filter, type = 'l', xlab = "frequency", ylab = NA,
main = "Power Transfer Function")
a1 <- 0.1
a2 <- 0.8
recursive_filter1 <- abs(2 + 1/(1 - a1 * exp(-2i * pi * omega)) -
a1 * exp(-2i * pi *omega))^2
recursive_filter2 <- abs(2 + 1/(1 - a2 * exp(-2i * pi * omega)) -
a2 * exp(-2i * pi *omega))^2
plot(omega, recursive_filter1, type = 'l', xlab = "frequency", ylab = NA,
main = "Power Transfer Function (a = 0.1)")
plot(omega, recursive_filter2, type = 'l', xlab = "frequency", ylab = NA,
main = "Power Transfer Function (a = 0.8)")
plot(omega, recursive_filter1, type = 'l', xlab = "frequency", ylab = NA,
main = "Power Transfer Function of Recursive Filter(a = 0.1)")
source('~/.active-rstudio-document', echo=TRUE)
ar1_128 <- arima.sim(list(ar = c(1, -0.5)), n = 128)
ar1_512 <- arima.sim(list(ar = c(1, -0.5)), n = 512)
ar1_1024 <- arima.sim(list(ar = c(1, -0.5)), n = 1024)
ar1_2048 <- arima.sim(list(ar = c(1, -0.5)), n = 2048)
plot(ar1_2048)
plot(ar1_128)
periodogram(ar1_128)
spectrunm(ar1_128)
spectrum(ar1_128)
spectrum(ar1_128)
spectrum(ar1_512)
spectrum(ar1_1024)
spectrum(ar1_2048)
mvspec(ar_128, kernel('daniell', 4)), log='no')
mvspec(ar_128, kernel('daniell', 4), log='no')
library(astsa)
mvspec(ar_128, kernel('daniell', 4), log='no')
mvspec(ar1_128, kernel('daniell', 4), log='no')
mvspec(ar1_128, kernel('daniell', 4), log='no')
mvspec(ar1_512, kernel('daniell', 4), log='no')
mvspec(ar1_1024, kernel('daniell', 4), log='no')
mvspec(ar1_2048, kernel('daniell', 4), log='no')
128))
mvspec(ar1_128, kernel('daniell', round(sqrt(128)), log='no')
mvspec(ar1_128, kernel('daniell', round(sqrt(128))), log='no')
mvspec(ar1_128, kernel('daniell', 4, log='no')
4
mvspec(ar1_512, kernel('daniell', 4), log='no')
mvspec(ar1_128, kernel('daniell', 4), log='no')
round(sqrt(128))
mvspec(ar1_128, kernel('daniell', 11), log='no')
mvspec(ar1_128, kernel('daniell', round(sqrt(128))), log='no')
mvspec(ar1_512, kernel('daniell', round(sqrt(512))), log='no')
mvspec(ar1_1024, kernel('daniell', 4), log='no')
mvspec(ar1_1024, kernel('daniell', round(sqrt(1024))), log='no')
mvspec(ar1_2048, kernel('daniell', 4), log='no')
mvspec(ar1_2048, kernel('daniell', round(sqrt(2048))), log='no')
mvspec(ar1_128, kernel('daniell', round(sqrt(128))), log='no')
mvspec(ar1_512, kernel('daniell', round(sqrt(512))), log='no')
mvspec(ar1_1024, kernel('daniell', round(sqrt(1024))), log='no')
mvspec(ar1_2048, kernel('daniell', round(sqrt(2048))), log='no')
ar1_128 <- arima.sim(list(ar = c(1, -0.5)), n = 128)
spectrum(ar1_128)
ar1_128 <- arima.sim(list(ar = 0.5), n = 128)
spectrum(ar1_128)
spectrum(ar1_2048)
ar1_512 <- arima.sim(list(ar = c(1, -0.5)), n = 512)
ar1_1024 <- arima.sim(list(ar = c(1, -0.5)), n = 1024)
ar1_2048 <- arima.sim(list(ar = c(1, -0.5)), n = 2048)
spectrum(ar1_128)
spectrum(ar1_512)
spectrum(ar1_1024)
ar1_2048 <- arima.sim(list(ar = 0.5), n = 2048)
spectrum(ar1_2048)
ar1_1024 <- arima.sim(list(ar = 0.5), n = 1024)
spectrum(ar1_1024)
spectrum(ar1_512)
ar1_512 <- arima.sim(list(ar = 0.5), n = 512)
spectrum(ar1_512)
mvspec(ar1_128, kernel('daniell', round(sqrt(128))), log='no')
library(astsa)
mvspec(ar1_128, kernel('daniell', round(sqrt(128))), log='no')
mvspec(ar1_512, kernel('daniell', round(sqrt(512))), log='no')
mvspec(ar1_1024, kernel('daniell', round(sqrt(1024))), log='no')
mvspec(ar1_2048, kernel('daniell', round(sqrt(2048))), log='no')
qnorm(.75)
qnorm(1)
qnorm(.84)
?qnorm
qnorm(.5)
qnorm(.80)
qnorm(.99)
qnorm(.68)
pacf(NSA_sdiff2)
knitr::opts_chunk$set(echo = TRUE)
library(astsa)
PAYEMS <- read.csv(file = "PAYEMS.csv", header = TRUE, sep = ",")
nfp_sa_ts_2010_2018 <- ts(PAYEMS[853:951, ][2])
SA_diff <- diff(nfp_sa_ts_2010_2018, lag = 1, differences = 1)
SA_mean <- mean(SA_diff, na.rm = TRUE)
centered_SA_diff <- SA_diff - SA_mean
plot.ts(centered_SA_diff, main = "Centered SA Diffs, 2010-2018", xlab = "Months (since January 2010)", ylab = "Number of Payrolls")
PAYEMS <- read.csv(file = "PAYEMS.csv", header = TRUE, sep = ",")
setwd("~/Dropbox/Berkeley/stat153/NFP-TSA/")
PAYEMS <- read.csv(file = "PAYEMS.csv", header = TRUE, sep = ",")
nfp_sa_ts_2010_2018 <- ts(PAYEMS[853:951, ][2])
SA_diff <- diff(nfp_sa_ts_2010_2018, lag = 1, differences = 1)
SA_mean <- mean(SA_diff, na.rm = TRUE)
centered_SA_diff <- SA_diff - SA_mean
plot.ts(centered_SA_diff, main = "Centered SA Diffs, 2010-2018", xlab = "Months (since January 2010)", ylab = "Number of Payrolls")
PAYNSA <- read.csv(file = "PAYNSA.csv", header = TRUE, sep = ",")
nfp_nsa_ts <- ts(PAYNSA[853:951,][2])
NSA_diff <- diff(nfp_nsa_ts, lag = 1, differences = 1)
NSA_mean <- mean(NSA_diff, na.rm = TRUE)
centered_NSA_diff <- NSA_diff - NSA_mean
plot.ts(centered_NSA_diff, main = "Centered NSA Diffs, 2010-2018", xlab = "Months (since January 2010)", ylab = "Number of Payrolls")
NSA_sdiff <- diff(nfp_nsa_ts, lag = 12, differences = 1)
NSA_smean <- mean(NSA_sdiff)
centered_NSA_sdiff <- NSA_sdiff - NSA_smean
plot.ts(centered_NSA_sdiff)
NSA_sdiff2 <- diff(NSA_sdiff, lag = 1, differences = 1)
plot.ts(NSA_sdiff2)
plot.ts(centered_NSA_sdiff, main = "Centered NSA Seasonal DIffs, 2010-2018", xlab = "Months (since January 2010)", ylab = "Number of Payrolls")
NSA_sdiff2 <- diff(NSA_sdiff, lag = 1, differences = 1)
plot.ts(NSA_sdiff2)
plot.ts(NSA_sdiff2, main = "Seasonal Diffs Differenced Again")
plot.ts(centered_NSA_sdiff, main = "Centered NSA Seasonal DIffs, 2010-2018", xlab = "Months (since January 2010)", ylab = "Number of Payrolls")
plot.ts(NSA_sdiff2, main = "NSA Seasonal Diffs Differenced Again")
centered_NSA_sdiff <- NSA_sdiff - NSA_smean
acf(NSA_sdiff2)
acf(centered_NSA_sdiff, main = "ACF Plot of SA Differences 2010-2018")
acf(centered_NSA_diff, main = "ACF Plot of SA Differences 2010-2018")
PAYEMS <- read.csv(file = "PAYEMS.csv", header = TRUE, sep = ",")
nfp_sa_ts <- ts(PAYEMS[2])
plot.ts(nfp_sa_ts, main = "Seasonally Adjusted Total Nonfarm Payrolls", xlab = "Months (since January 1939)", ylab = "Number of Payrolls")
nfp_nsa_ts_2010_2018 <- ts(PAYNSA[854:952, ][2])
plot.ts(nfp_nsa_ts_2010_2018, main = "Total Nonfarm Payrolls (NSA), 2010-2018", xlab = "Months (since January 2010)", ylab = "Number of Payrolls")
pacf(NSA_sdiff2)
acf(NSA_sdiff2)
acf(centered_NSA_diff, main = "ACF Plot of SA Differences 2010-2018")
acf(centered_NSA_sdiff, main = "ACF Plot of SA Differences 2010-2018")
acf(NSA_sdiff2)
acf(centered_NSA_diff, main = "ACF Plot of NSA Differences 2010-2018")
acf(centered_NSA_sdiff, main = "ACF Plot of NSA Differences 2010-2018")
acf(NSA_sdiff2)
acf(centered_NSA_diff, main = "ACF Plot of NSA Differences 2010-2018")
acf(centered_NSA_sdiff, main = "ACF Plot of NSA Seasonal Differences 2010-2018")
acf(NSA_sdiff2)
pacf(centered_NSA_diff, main = "PACF Plot of NSA Differences 2010-2018")
pacf(centered_NSA_sdiff, main = "PACF Plot of NSA Seasonal Differences 2010-2018")
pacf(NSA_sdiff2)
pacf(centered_NSA_sdiff, main = "PACF Plot of NSA Seasonal Differences 2010-2018")
pacf(NSA_sdiff2)
pacf(NSA_sdiff2, main = "PACF Plot of NSA Seasonal Diffs Differenced Again")
pacf(centered_NSA_sdiff, main = "PACF Plot of NSA Seasonal Differences 2010-2018")
pacf(NSA_sdiff2, main = "PACF Plot of NSA Seasonal Diffs Differenced Again")
acf(NSA_sdiff2, main = "ACF Plot of NSA Seasonal Diffs Differenced Again")
sarima(centered_NSA_diff, p = 1, d = 0, q = 0, D = 1, S = 12)
sarima(NSA_sdiff2, p = 0, d = 0, q = 1)
sarima(centered_NSA_diff, p = 1, d = 0, q = 0, D = 1, S = 12)
sarima(NSA_sdiff2, p = 0, d = 0, q = 1)
sarima(centered_NSA_diff, p = 1, d = 0, q = 0, D = 1, S = 12)
sarima(NSA_sdiff2, p = 0, d = 0, q = 1)
plot.ts(centered_NSA_diff, main = "Centered NSA Diffs, 2010-2018", xlab = "Months (since January 2010)", ylab = "Number of Payrolls")
plot.ts(nfp_nsa_ts_2010_2018, main = "Total Nonfarm Payrolls (NSA), 2010-2018", xlab = "Months (since January 2010)", ylab = "Number of Payrolls")
plot.ts(centered_NSA_diff, main = "Centered NSA Diffs, 2010-2018", xlab = "Months (since January 2010)", ylab = "Number of Payrolls")
plot.ts(centered_NSA_sdiff, main = "Centered NSA Seasonal DIffs, 2010-2018", xlab = "Months (since January 2010)", ylab = "Number of Payrolls")
NSA_sdiff2 <- diff(NSA_sdiff, lag = 1, differences = 1)
plot.ts(NSA_sdiff2, main = "NSA Seasonal Diffs Differenced Again")
acf(NSA_sdiff2, main = "ACF Plot of NSA Seasonal Diffs Differenced Again")
pacf(NSA_sdiff2, main = "PACF Plot of NSA Seasonal Diffs Differenced Again")
acf(centered_NSA_diff, main = "ACF Plot of NSA Differences 2010-2018")
acf(centered_NSA_sdiff, main = "ACF Plot of NSA Seasonal Differences 2010-2018")
PAYNSA <- read.csv(file = "PAYNSA.csv", header = TRUE, sep = ",")
spec.pgram(PAYNSA)
plot.ts(PAYNSA)
nfp_sa_ts_2010_2018 <- ts(PAYEMS[853:951, ][2])
PAYNSA <- read.csv(file = "PAYNSA.csv", header = TRUE, sep = ",")
nfp_nsa_ts_2010_2018 <- ts(PAYNSA[853:951, ][2])
plot.ts(nfp_nsa_ts_2010_2018)
plot.ts(nfp_nsa_ts_2010_2018, main = "Non Seasonally Adjusted NFP Data")
spec.pgram(PAYNSA)
spec.pgram(nfp_nsa_ts_2010_2018)
spec.pgram(nfp_nsa_ts_2010_2018)
k = kernel("daniell", 4)
mvspec(nfp_nsa_ts_2010_2018, k, log="no")
spec.pgram(nfp_nsa_ts_2010_2018)
mvspec(nfp_nsa_ts_2010_2018, k, log="no")
spec.pgram(nfp_nsa_ts_2010_2018)
mvspec(nfp_nsa_ts_2010_2018, k, log="no")
mvspec(nfp_nsa_ts_2010_2018)
mvspec(nfp_nsa_ts_2010_2018, taper = 0.1)
mvspec(nfp_nsa_ts_2010_2018)
mvspec(nfp_nsa_ts_2010_2018, k, log="no", taper = 0.1)
mvspec(nfp_nsa_ts_2010_2018, k, log="no")
mvspec(nfp_nsa_ts_2010_2018, k, log="no", taper = 0.1)
mvspec(nfp_nsa_ts_2010_2018, k, log="no", taper = 0.2)
mvspec(nfp_nsa_ts_2010_2018, k, log="no", taper = 0.1)
mvspec(nfp_nsa_ts_2010_2018, k, log="no")
mvspec(nfp_nsa_ts_2010_2018, k, log="no", taper = 0.1)
plot.ts(nfp_nsa_ts_2010_2018, main = "Non Seasonally Adjusted NFP Data")
mvspec(nfp_nsa_ts_2010_2018)
mvspec(nfp_nsa_ts_2010_2018, detrend = FALSE)
mvspec(nfp_nsa_ts_2010_2018)
mvspec(nfp_nsa_ts_2010_2018, detrend = FALSE)
mvspec(nfp_nsa_ts_2010_2018)
detrend <- diff(nfp_nsa_ts_2010_2018)
mvspec(detrend, detrend = FALSE)
plot.ts(detrend)
detrend <- diff(nfp_nsa_ts_2010_2018)
plot.ts(detrend)
mvspec(detrend, detrend = FALSE)
mvspec(nfp_nsa_ts_2010_2018)
mvspec(detrend, detrend = FALSE)
mvspec(detrend, k, log="no")
mvspec(nfp_nsa_ts_2010_2018, k, log="no")
mvspec(detrend, k, log="no")
mvspec(nfp_nsa_ts_2010_2018, k, log="no")
mvspec(detrend, k, log="no")
mvspec(detrend, k, log="no", taper = 0.1)
mvspec(detrend, k, log="no", taper = 0.1)
mvspec(detrend, k, log="no")
mvspec(detrend, detrend = FALSE)
mvspec(nfp_nsa_ts_2010_2018)
mvspec(detrend, detrend = FALSE)
mvspec(nfp_nsa_ts_2010_2018)
mvspec(detrend, detrend = FALSE)
mvspec(nfp_nsa_ts_2010_2018)
mvspec(detrend, detrend = FALSE)
mvspec(detrend, k, log="no")
install.packages(c("backports", "cluster", "cowplot", "curl", "digest", "git2r", "lubridate", "MASS", "Matrix", "mgcv", "nlme", "openssl", "rmarkdown", "rpart", "rprojroot", "VGAM", "viridisLite", "withr"))
